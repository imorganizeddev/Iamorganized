//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IMInventory.iminventory {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EmpLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpDetailsByEmpIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProjectListOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback PopulateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalCreateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalSignUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalSignUpUserUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExternalSignUpUserSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FreeUserUploadSizeUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSingleImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveManualOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveManualforGDriveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailForGDriveOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignupPlanOperationCompleted;
        
        private System.Threading.SendOrPostCallback CMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileMultipleOperationCompleted;
        
        private System.Threading.SendOrPostCallback MargeAudioOperationCompleted;
        
        private System.Threading.SendOrPostCallback MargeAudioForGDriveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQRCodeMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLocationQRCodeMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGoogleAuthCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGoogleAuthCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = "http://imorganizedapp.com/WebService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EmpLoginCompletedEventHandler EmpLoginCompleted;
        
        /// <remarks/>
        public event ForgotPasswordCompletedEventHandler ForgotPasswordCompleted;
        
        /// <remarks/>
        public event GetEmpDetailsByEmpIDCompletedEventHandler GetEmpDetailsByEmpIDCompleted;
        
        /// <remarks/>
        public event ProjectListCompletedEventHandler ProjectListCompleted;
        
        /// <remarks/>
        public event StartProjectCompletedEventHandler StartProjectCompleted;
        
        /// <remarks/>
        public event SaveProfileCompletedEventHandler SaveProfileCompleted;
        
        /// <remarks/>
        public event PopulateProfileCompletedEventHandler PopulateProfileCompleted;
        
        /// <remarks/>
        public event LocationItemsCompletedEventHandler LocationItemsCompleted;
        
        /// <remarks/>
        public event ExternalCreateProjectCompletedEventHandler ExternalCreateProjectCompleted;
        
        /// <remarks/>
        public event ExternalSignUpCompletedEventHandler ExternalSignUpCompleted;
        
        /// <remarks/>
        public event ExternalSignUpUserUpdateCompletedEventHandler ExternalSignUpUserUpdateCompleted;
        
        /// <remarks/>
        public event ExternalSignUpUserSubscriptionCompletedEventHandler ExternalSignUpUserSubscriptionCompleted;
        
        /// <remarks/>
        public event FreeUserUploadSizeUpdateCompletedEventHandler FreeUserUploadSizeUpdateCompleted;
        
        /// <remarks/>
        public event SaveImageCompletedEventHandler SaveImageCompleted;
        
        /// <remarks/>
        public event SaveSingleImageCompletedEventHandler SaveSingleImageCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event SaveManualCompletedEventHandler SaveManualCompleted;
        
        /// <remarks/>
        public event SaveManualforGDriveCompletedEventHandler SaveManualforGDriveCompleted;
        
        /// <remarks/>
        public event SendMailForGDriveCompletedEventHandler SendMailForGDriveCompleted;
        
        /// <remarks/>
        public event SignupPlanCompletedEventHandler SignupPlanCompleted;
        
        /// <remarks/>
        public event CMSCompletedEventHandler CMSCompleted;
        
        /// <remarks/>
        public event UploadFileMultipleCompletedEventHandler UploadFileMultipleCompleted;
        
        /// <remarks/>
        public event MargeAudioCompletedEventHandler MargeAudioCompleted;
        
        /// <remarks/>
        public event MargeAudioForGDriveCompletedEventHandler MargeAudioForGDriveCompleted;
        
        /// <remarks/>
        public event DeleteProjectCompletedEventHandler DeleteProjectCompleted;
        
        /// <remarks/>
        public event SendQRCodeMailCompletedEventHandler SendQRCodeMailCompleted;
        
        /// <remarks/>
        public event ValidatePaymentCompletedEventHandler ValidatePaymentCompleted;
        
        /// <remarks/>
        public event SendLocationQRCodeMailCompletedEventHandler SendLocationQRCodeMailCompleted;
        
        /// <remarks/>
        public event GetGoogleAuthCodeCompletedEventHandler GetGoogleAuthCodeCompleted;
        
        /// <remarks/>
        public event SaveGoogleAuthCodeCompletedEventHandler SaveGoogleAuthCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmpLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EmpLogin(string Username, string password, string deviceid, string deviceType) {
            object[] results = this.Invoke("EmpLogin", new object[] {
                        Username,
                        password,
                        deviceid,
                        deviceType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EmpLoginAsync(string Username, string password, string deviceid, string deviceType) {
            this.EmpLoginAsync(Username, password, deviceid, deviceType, null);
        }
        
        /// <remarks/>
        public void EmpLoginAsync(string Username, string password, string deviceid, string deviceType, object userState) {
            if ((this.EmpLoginOperationCompleted == null)) {
                this.EmpLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmpLoginOperationCompleted);
            }
            this.InvokeAsync("EmpLogin", new object[] {
                        Username,
                        password,
                        deviceid,
                        deviceType}, this.EmpLoginOperationCompleted, userState);
        }
        
        private void OnEmpLoginOperationCompleted(object arg) {
            if ((this.EmpLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmpLoginCompleted(this, new EmpLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForgotPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ForgotPassword(string Email) {
            object[] results = this.Invoke("ForgotPassword", new object[] {
                        Email});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string Email) {
            this.ForgotPasswordAsync(Email, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string Email, object userState) {
            if ((this.ForgotPasswordOperationCompleted == null)) {
                this.ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotPassword", new object[] {
                        Email}, this.ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnForgotPasswordOperationCompleted(object arg) {
            if ((this.ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordCompleted(this, new ForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmpDetailsByEmpID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetEmpDetailsByEmpID(string EmpID, string deviceid) {
            object[] results = this.Invoke("GetEmpDetailsByEmpID", new object[] {
                        EmpID,
                        deviceid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpDetailsByEmpIDAsync(string EmpID, string deviceid) {
            this.GetEmpDetailsByEmpIDAsync(EmpID, deviceid, null);
        }
        
        /// <remarks/>
        public void GetEmpDetailsByEmpIDAsync(string EmpID, string deviceid, object userState) {
            if ((this.GetEmpDetailsByEmpIDOperationCompleted == null)) {
                this.GetEmpDetailsByEmpIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpDetailsByEmpIDOperationCompleted);
            }
            this.InvokeAsync("GetEmpDetailsByEmpID", new object[] {
                        EmpID,
                        deviceid}, this.GetEmpDetailsByEmpIDOperationCompleted, userState);
        }
        
        private void OnGetEmpDetailsByEmpIDOperationCompleted(object arg) {
            if ((this.GetEmpDetailsByEmpIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpDetailsByEmpIDCompleted(this, new GetEmpDetailsByEmpIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProjectList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProjectList(string Projectname, string EID) {
            object[] results = this.Invoke("ProjectList", new object[] {
                        Projectname,
                        EID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProjectListAsync(string Projectname, string EID) {
            this.ProjectListAsync(Projectname, EID, null);
        }
        
        /// <remarks/>
        public void ProjectListAsync(string Projectname, string EID, object userState) {
            if ((this.ProjectListOperationCompleted == null)) {
                this.ProjectListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProjectListOperationCompleted);
            }
            this.InvokeAsync("ProjectList", new object[] {
                        Projectname,
                        EID}, this.ProjectListOperationCompleted, userState);
        }
        
        private void OnProjectListOperationCompleted(object arg) {
            if ((this.ProjectListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProjectListCompleted(this, new ProjectListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode StartProject(string pid, string Option) {
            object[] results = this.Invoke("StartProject", new object[] {
                        pid,
                        Option});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void StartProjectAsync(string pid, string Option) {
            this.StartProjectAsync(pid, Option, null);
        }
        
        /// <remarks/>
        public void StartProjectAsync(string pid, string Option, object userState) {
            if ((this.StartProjectOperationCompleted == null)) {
                this.StartProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartProjectOperationCompleted);
            }
            this.InvokeAsync("StartProject", new object[] {
                        pid,
                        Option}, this.StartProjectOperationCompleted, userState);
        }
        
        private void OnStartProjectOperationCompleted(object arg) {
            if ((this.StartProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartProjectCompleted(this, new StartProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveProfile(string EID, string name, string companyname, string email, string phone, string address, string Alert, string Vibrate, string Wifi, string Bluetooth) {
            object[] results = this.Invoke("SaveProfile", new object[] {
                        EID,
                        name,
                        companyname,
                        email,
                        phone,
                        address,
                        Alert,
                        Vibrate,
                        Wifi,
                        Bluetooth});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProfileAsync(string EID, string name, string companyname, string email, string phone, string address, string Alert, string Vibrate, string Wifi, string Bluetooth) {
            this.SaveProfileAsync(EID, name, companyname, email, phone, address, Alert, Vibrate, Wifi, Bluetooth, null);
        }
        
        /// <remarks/>
        public void SaveProfileAsync(string EID, string name, string companyname, string email, string phone, string address, string Alert, string Vibrate, string Wifi, string Bluetooth, object userState) {
            if ((this.SaveProfileOperationCompleted == null)) {
                this.SaveProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProfileOperationCompleted);
            }
            this.InvokeAsync("SaveProfile", new object[] {
                        EID,
                        name,
                        companyname,
                        email,
                        phone,
                        address,
                        Alert,
                        Vibrate,
                        Wifi,
                        Bluetooth}, this.SaveProfileOperationCompleted, userState);
        }
        
        private void OnSaveProfileOperationCompleted(object arg) {
            if ((this.SaveProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProfileCompleted(this, new SaveProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PopulateProfile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PopulateProfile(string EID) {
            object[] results = this.Invoke("PopulateProfile", new object[] {
                        EID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PopulateProfileAsync(string EID) {
            this.PopulateProfileAsync(EID, null);
        }
        
        /// <remarks/>
        public void PopulateProfileAsync(string EID, object userState) {
            if ((this.PopulateProfileOperationCompleted == null)) {
                this.PopulateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPopulateProfileOperationCompleted);
            }
            this.InvokeAsync("PopulateProfile", new object[] {
                        EID}, this.PopulateProfileOperationCompleted, userState);
        }
        
        private void OnPopulateProfileOperationCompleted(object arg) {
            if ((this.PopulateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PopulateProfileCompleted(this, new PopulateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode LocationItems(string EID) {
            object[] results = this.Invoke("LocationItems", new object[] {
                        EID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void LocationItemsAsync(string EID) {
            this.LocationItemsAsync(EID, null);
        }
        
        /// <remarks/>
        public void LocationItemsAsync(string EID, object userState) {
            if ((this.LocationItemsOperationCompleted == null)) {
                this.LocationItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationItemsOperationCompleted);
            }
            this.InvokeAsync("LocationItems", new object[] {
                        EID}, this.LocationItemsOperationCompleted, userState);
        }
        
        private void OnLocationItemsOperationCompleted(object arg) {
            if ((this.LocationItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationItemsCompleted(this, new LocationItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalCreateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExternalCreateProject(string EID, string Project, string Client, string Date) {
            object[] results = this.Invoke("ExternalCreateProject", new object[] {
                        EID,
                        Project,
                        Client,
                        Date});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalCreateProjectAsync(string EID, string Project, string Client, string Date) {
            this.ExternalCreateProjectAsync(EID, Project, Client, Date, null);
        }
        
        /// <remarks/>
        public void ExternalCreateProjectAsync(string EID, string Project, string Client, string Date, object userState) {
            if ((this.ExternalCreateProjectOperationCompleted == null)) {
                this.ExternalCreateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalCreateProjectOperationCompleted);
            }
            this.InvokeAsync("ExternalCreateProject", new object[] {
                        EID,
                        Project,
                        Client,
                        Date}, this.ExternalCreateProjectOperationCompleted, userState);
        }
        
        private void OnExternalCreateProjectOperationCompleted(object arg) {
            if ((this.ExternalCreateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalCreateProjectCompleted(this, new ExternalCreateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalSignUp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExternalSignUp(string name, string companyname, string email, string phone, string address, string Password, string username, string UserType, string Device, string userplan, string StripeSubscriptionID, string deviceType) {
            object[] results = this.Invoke("ExternalSignUp", new object[] {
                        name,
                        companyname,
                        email,
                        phone,
                        address,
                        Password,
                        username,
                        UserType,
                        Device,
                        userplan,
                        StripeSubscriptionID,
                        deviceType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalSignUpAsync(string name, string companyname, string email, string phone, string address, string Password, string username, string UserType, string Device, string userplan, string StripeSubscriptionID, string deviceType) {
            this.ExternalSignUpAsync(name, companyname, email, phone, address, Password, username, UserType, Device, userplan, StripeSubscriptionID, deviceType, null);
        }
        
        /// <remarks/>
        public void ExternalSignUpAsync(string name, string companyname, string email, string phone, string address, string Password, string username, string UserType, string Device, string userplan, string StripeSubscriptionID, string deviceType, object userState) {
            if ((this.ExternalSignUpOperationCompleted == null)) {
                this.ExternalSignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalSignUpOperationCompleted);
            }
            this.InvokeAsync("ExternalSignUp", new object[] {
                        name,
                        companyname,
                        email,
                        phone,
                        address,
                        Password,
                        username,
                        UserType,
                        Device,
                        userplan,
                        StripeSubscriptionID,
                        deviceType}, this.ExternalSignUpOperationCompleted, userState);
        }
        
        private void OnExternalSignUpOperationCompleted(object arg) {
            if ((this.ExternalSignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalSignUpCompleted(this, new ExternalSignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalSignUpUserUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExternalSignUpUserUpdate(string empid, string StripeSubscriptionID, string UserPlan, string DeviceID) {
            object[] results = this.Invoke("ExternalSignUpUserUpdate", new object[] {
                        empid,
                        StripeSubscriptionID,
                        UserPlan,
                        DeviceID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalSignUpUserUpdateAsync(string empid, string StripeSubscriptionID, string UserPlan, string DeviceID) {
            this.ExternalSignUpUserUpdateAsync(empid, StripeSubscriptionID, UserPlan, DeviceID, null);
        }
        
        /// <remarks/>
        public void ExternalSignUpUserUpdateAsync(string empid, string StripeSubscriptionID, string UserPlan, string DeviceID, object userState) {
            if ((this.ExternalSignUpUserUpdateOperationCompleted == null)) {
                this.ExternalSignUpUserUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalSignUpUserUpdateOperationCompleted);
            }
            this.InvokeAsync("ExternalSignUpUserUpdate", new object[] {
                        empid,
                        StripeSubscriptionID,
                        UserPlan,
                        DeviceID}, this.ExternalSignUpUserUpdateOperationCompleted, userState);
        }
        
        private void OnExternalSignUpUserUpdateOperationCompleted(object arg) {
            if ((this.ExternalSignUpUserUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalSignUpUserUpdateCompleted(this, new ExternalSignUpUserUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExternalSignUpUserSubscription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExternalSignUpUserSubscription(string empid, string DeviceID, string AccessFindITExport, string AccessBarCodeScan, string AccessExport) {
            object[] results = this.Invoke("ExternalSignUpUserSubscription", new object[] {
                        empid,
                        DeviceID,
                        AccessFindITExport,
                        AccessBarCodeScan,
                        AccessExport});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ExternalSignUpUserSubscriptionAsync(string empid, string DeviceID, string AccessFindITExport, string AccessBarCodeScan, string AccessExport) {
            this.ExternalSignUpUserSubscriptionAsync(empid, DeviceID, AccessFindITExport, AccessBarCodeScan, AccessExport, null);
        }
        
        /// <remarks/>
        public void ExternalSignUpUserSubscriptionAsync(string empid, string DeviceID, string AccessFindITExport, string AccessBarCodeScan, string AccessExport, object userState) {
            if ((this.ExternalSignUpUserSubscriptionOperationCompleted == null)) {
                this.ExternalSignUpUserSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExternalSignUpUserSubscriptionOperationCompleted);
            }
            this.InvokeAsync("ExternalSignUpUserSubscription", new object[] {
                        empid,
                        DeviceID,
                        AccessFindITExport,
                        AccessBarCodeScan,
                        AccessExport}, this.ExternalSignUpUserSubscriptionOperationCompleted, userState);
        }
        
        private void OnExternalSignUpUserSubscriptionOperationCompleted(object arg) {
            if ((this.ExternalSignUpUserSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExternalSignUpUserSubscriptionCompleted(this, new ExternalSignUpUserSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FreeUserUploadSizeUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode FreeUserUploadSizeUpdate(string empid, string DeviceID, string uploadsize) {
            object[] results = this.Invoke("FreeUserUploadSizeUpdate", new object[] {
                        empid,
                        DeviceID,
                        uploadsize});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void FreeUserUploadSizeUpdateAsync(string empid, string DeviceID, string uploadsize) {
            this.FreeUserUploadSizeUpdateAsync(empid, DeviceID, uploadsize, null);
        }
        
        /// <remarks/>
        public void FreeUserUploadSizeUpdateAsync(string empid, string DeviceID, string uploadsize, object userState) {
            if ((this.FreeUserUploadSizeUpdateOperationCompleted == null)) {
                this.FreeUserUploadSizeUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFreeUserUploadSizeUpdateOperationCompleted);
            }
            this.InvokeAsync("FreeUserUploadSizeUpdate", new object[] {
                        empid,
                        DeviceID,
                        uploadsize}, this.FreeUserUploadSizeUpdateOperationCompleted, userState);
        }
        
        private void OnFreeUserUploadSizeUpdateOperationCompleted(object arg) {
            if ((this.FreeUserUploadSizeUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FreeUserUploadSizeUpdateCompleted(this, new FreeUserUploadSizeUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArrayIn1, string Filename1, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArrayIn2, string Filename2, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArrayIn3, string Filename3, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteArrayIn4, string Filename4) {
            object[] results = this.Invoke("SaveImage", new object[] {
                        byteArrayIn1,
                        Filename1,
                        byteArrayIn2,
                        Filename2,
                        byteArrayIn3,
                        Filename3,
                        byteArrayIn4,
                        Filename4});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveImageAsync(byte[] byteArrayIn1, string Filename1, byte[] byteArrayIn2, string Filename2, byte[] byteArrayIn3, string Filename3, byte[] byteArrayIn4, string Filename4) {
            this.SaveImageAsync(byteArrayIn1, Filename1, byteArrayIn2, Filename2, byteArrayIn3, Filename3, byteArrayIn4, Filename4, null);
        }
        
        /// <remarks/>
        public void SaveImageAsync(byte[] byteArrayIn1, string Filename1, byte[] byteArrayIn2, string Filename2, byte[] byteArrayIn3, string Filename3, byte[] byteArrayIn4, string Filename4, object userState) {
            if ((this.SaveImageOperationCompleted == null)) {
                this.SaveImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveImageOperationCompleted);
            }
            this.InvokeAsync("SaveImage", new object[] {
                        byteArrayIn1,
                        Filename1,
                        byteArrayIn2,
                        Filename2,
                        byteArrayIn3,
                        Filename3,
                        byteArrayIn4,
                        Filename4}, this.SaveImageOperationCompleted, userState);
        }
        
        private void OnSaveImageOperationCompleted(object arg) {
            if ((this.SaveImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveImageCompleted(this, new SaveImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveSingleImage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveSingleImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName) {
            object[] results = this.Invoke("SaveSingleImage", new object[] {
                        f,
                        fileName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSingleImageAsync(byte[] f, string fileName) {
            this.SaveSingleImageAsync(f, fileName, null);
        }
        
        /// <remarks/>
        public void SaveSingleImageAsync(byte[] f, string fileName, object userState) {
            if ((this.SaveSingleImageOperationCompleted == null)) {
                this.SaveSingleImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSingleImageOperationCompleted);
            }
            this.InvokeAsync("SaveSingleImage", new object[] {
                        f,
                        fileName}, this.SaveSingleImageOperationCompleted, userState);
        }
        
        private void OnSaveSingleImageOperationCompleted(object arg) {
            if ((this.SaveSingleImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSingleImageCompleted(this, new SaveSingleImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        f,
                        fileName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] f, string fileName) {
            this.UploadFileAsync(f, fileName, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(byte[] f, string fileName, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        f,
                        fileName}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveManual", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveManual(string element) {
            object[] results = this.Invoke("SaveManual", new object[] {
                        element});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveManualAsync(string element) {
            this.SaveManualAsync(element, null);
        }
        
        /// <remarks/>
        public void SaveManualAsync(string element, object userState) {
            if ((this.SaveManualOperationCompleted == null)) {
                this.SaveManualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveManualOperationCompleted);
            }
            this.InvokeAsync("SaveManual", new object[] {
                        element}, this.SaveManualOperationCompleted, userState);
        }
        
        private void OnSaveManualOperationCompleted(object arg) {
            if ((this.SaveManualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveManualCompleted(this, new SaveManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveManualforGDrive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] SaveManualforGDrive(string element, string GDriveURL) {
            object[] results = this.Invoke("SaveManualforGDrive", new object[] {
                        element,
                        GDriveURL});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void SaveManualforGDriveAsync(string element, string GDriveURL) {
            this.SaveManualforGDriveAsync(element, GDriveURL, null);
        }
        
        /// <remarks/>
        public void SaveManualforGDriveAsync(string element, string GDriveURL, object userState) {
            if ((this.SaveManualforGDriveOperationCompleted == null)) {
                this.SaveManualforGDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveManualforGDriveOperationCompleted);
            }
            this.InvokeAsync("SaveManualforGDrive", new object[] {
                        element,
                        GDriveURL}, this.SaveManualforGDriveOperationCompleted, userState);
        }
        
        private void OnSaveManualforGDriveOperationCompleted(object arg) {
            if ((this.SaveManualforGDriveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveManualforGDriveCompleted(this, new SaveManualforGDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailForGDrive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendMailForGDrive(string UserID, string ProjectID, string GDriveURL) {
            object[] results = this.Invoke("SendMailForGDrive", new object[] {
                        UserID,
                        ProjectID,
                        GDriveURL});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendMailForGDriveAsync(string UserID, string ProjectID, string GDriveURL) {
            this.SendMailForGDriveAsync(UserID, ProjectID, GDriveURL, null);
        }
        
        /// <remarks/>
        public void SendMailForGDriveAsync(string UserID, string ProjectID, string GDriveURL, object userState) {
            if ((this.SendMailForGDriveOperationCompleted == null)) {
                this.SendMailForGDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailForGDriveOperationCompleted);
            }
            this.InvokeAsync("SendMailForGDrive", new object[] {
                        UserID,
                        ProjectID,
                        GDriveURL}, this.SendMailForGDriveOperationCompleted, userState);
        }
        
        private void OnSendMailForGDriveOperationCompleted(object arg) {
            if ((this.SendMailForGDriveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailForGDriveCompleted(this, new SendMailForGDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignupPlan", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SignupPlan(string Plan) {
            object[] results = this.Invoke("SignupPlan", new object[] {
                        Plan});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SignupPlanAsync(string Plan) {
            this.SignupPlanAsync(Plan, null);
        }
        
        /// <remarks/>
        public void SignupPlanAsync(string Plan, object userState) {
            if ((this.SignupPlanOperationCompleted == null)) {
                this.SignupPlanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignupPlanOperationCompleted);
            }
            this.InvokeAsync("SignupPlan", new object[] {
                        Plan}, this.SignupPlanOperationCompleted, userState);
        }
        
        private void OnSignupPlanOperationCompleted(object arg) {
            if ((this.SignupPlanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignupPlanCompleted(this, new SignupPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CMS(string Type) {
            object[] results = this.Invoke("CMS", new object[] {
                        Type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CMSAsync(string Type) {
            this.CMSAsync(Type, null);
        }
        
        /// <remarks/>
        public void CMSAsync(string Type, object userState) {
            if ((this.CMSOperationCompleted == null)) {
                this.CMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCMSOperationCompleted);
            }
            this.InvokeAsync("CMS", new object[] {
                        Type}, this.CMSOperationCompleted, userState);
        }
        
        private void OnCMSOperationCompleted(object arg) {
            if ((this.CMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CMSCompleted(this, new CMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFileMultiple", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadFileMultiple([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName, string FileTag) {
            object[] results = this.Invoke("UploadFileMultiple", new object[] {
                        f,
                        fileName,
                        FileTag});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileMultipleAsync(byte[] f, string fileName, string FileTag) {
            this.UploadFileMultipleAsync(f, fileName, FileTag, null);
        }
        
        /// <remarks/>
        public void UploadFileMultipleAsync(byte[] f, string fileName, string FileTag, object userState) {
            if ((this.UploadFileMultipleOperationCompleted == null)) {
                this.UploadFileMultipleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileMultipleOperationCompleted);
            }
            this.InvokeAsync("UploadFileMultiple", new object[] {
                        f,
                        fileName,
                        FileTag}, this.UploadFileMultipleOperationCompleted, userState);
        }
        
        private void OnUploadFileMultipleOperationCompleted(object arg) {
            if ((this.UploadFileMultipleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileMultipleCompleted(this, new UploadFileMultipleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MargeAudio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MargeAudio(string FileTag) {
            object[] results = this.Invoke("MargeAudio", new object[] {
                        FileTag});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MargeAudioAsync(string FileTag) {
            this.MargeAudioAsync(FileTag, null);
        }
        
        /// <remarks/>
        public void MargeAudioAsync(string FileTag, object userState) {
            if ((this.MargeAudioOperationCompleted == null)) {
                this.MargeAudioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMargeAudioOperationCompleted);
            }
            this.InvokeAsync("MargeAudio", new object[] {
                        FileTag}, this.MargeAudioOperationCompleted, userState);
        }
        
        private void OnMargeAudioOperationCompleted(object arg) {
            if ((this.MargeAudioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MargeAudioCompleted(this, new MargeAudioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MargeAudioForGDrive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] MargeAudioForGDrive(string FileTag) {
            object[] results = this.Invoke("MargeAudioForGDrive", new object[] {
                        FileTag});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void MargeAudioForGDriveAsync(string FileTag) {
            this.MargeAudioForGDriveAsync(FileTag, null);
        }
        
        /// <remarks/>
        public void MargeAudioForGDriveAsync(string FileTag, object userState) {
            if ((this.MargeAudioForGDriveOperationCompleted == null)) {
                this.MargeAudioForGDriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMargeAudioForGDriveOperationCompleted);
            }
            this.InvokeAsync("MargeAudioForGDrive", new object[] {
                        FileTag}, this.MargeAudioForGDriveOperationCompleted, userState);
        }
        
        private void OnMargeAudioForGDriveOperationCompleted(object arg) {
            if ((this.MargeAudioForGDriveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MargeAudioForGDriveCompleted(this, new MargeAudioForGDriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteProject(string ProjectID) {
            object[] results = this.Invoke("DeleteProject", new object[] {
                        ProjectID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(string ProjectID) {
            this.DeleteProjectAsync(ProjectID, null);
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(string ProjectID, object userState) {
            if ((this.DeleteProjectOperationCompleted == null)) {
                this.DeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteProject", new object[] {
                        ProjectID}, this.DeleteProjectOperationCompleted, userState);
        }
        
        private void OnDeleteProjectOperationCompleted(object arg) {
            if ((this.DeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectCompleted(this, new DeleteProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendQRCodeMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendQRCodeMail(string xml) {
            object[] results = this.Invoke("SendQRCodeMail", new object[] {
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendQRCodeMailAsync(string xml) {
            this.SendQRCodeMailAsync(xml, null);
        }
        
        /// <remarks/>
        public void SendQRCodeMailAsync(string xml, object userState) {
            if ((this.SendQRCodeMailOperationCompleted == null)) {
                this.SendQRCodeMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQRCodeMailOperationCompleted);
            }
            this.InvokeAsync("SendQRCodeMail", new object[] {
                        xml}, this.SendQRCodeMailOperationCompleted, userState);
        }
        
        private void OnSendQRCodeMailOperationCompleted(object arg) {
            if ((this.SendQRCodeMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQRCodeMailCompleted(this, new SendQRCodeMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ValidatePayment(string UserID, string SubscriptionID, string DeviceID) {
            object[] results = this.Invoke("ValidatePayment", new object[] {
                        UserID,
                        SubscriptionID,
                        DeviceID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePaymentAsync(string UserID, string SubscriptionID, string DeviceID) {
            this.ValidatePaymentAsync(UserID, SubscriptionID, DeviceID, null);
        }
        
        /// <remarks/>
        public void ValidatePaymentAsync(string UserID, string SubscriptionID, string DeviceID, object userState) {
            if ((this.ValidatePaymentOperationCompleted == null)) {
                this.ValidatePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePaymentOperationCompleted);
            }
            this.InvokeAsync("ValidatePayment", new object[] {
                        UserID,
                        SubscriptionID,
                        DeviceID}, this.ValidatePaymentOperationCompleted, userState);
        }
        
        private void OnValidatePaymentOperationCompleted(object arg) {
            if ((this.ValidatePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePaymentCompleted(this, new ValidatePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendLocationQRCodeMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SendLocationQRCodeMail(string xml) {
            object[] results = this.Invoke("SendLocationQRCodeMail", new object[] {
                        xml});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SendLocationQRCodeMailAsync(string xml) {
            this.SendLocationQRCodeMailAsync(xml, null);
        }
        
        /// <remarks/>
        public void SendLocationQRCodeMailAsync(string xml, object userState) {
            if ((this.SendLocationQRCodeMailOperationCompleted == null)) {
                this.SendLocationQRCodeMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLocationQRCodeMailOperationCompleted);
            }
            this.InvokeAsync("SendLocationQRCodeMail", new object[] {
                        xml}, this.SendLocationQRCodeMailOperationCompleted, userState);
        }
        
        private void OnSendLocationQRCodeMailOperationCompleted(object arg) {
            if ((this.SendLocationQRCodeMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLocationQRCodeMailCompleted(this, new SendLocationQRCodeMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGoogleAuthCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGoogleAuthCode(long AccountID) {
            object[] results = this.Invoke("GetGoogleAuthCode", new object[] {
                        AccountID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGoogleAuthCodeAsync(long AccountID) {
            this.GetGoogleAuthCodeAsync(AccountID, null);
        }
        
        /// <remarks/>
        public void GetGoogleAuthCodeAsync(long AccountID, object userState) {
            if ((this.GetGoogleAuthCodeOperationCompleted == null)) {
                this.GetGoogleAuthCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGoogleAuthCodeOperationCompleted);
            }
            this.InvokeAsync("GetGoogleAuthCode", new object[] {
                        AccountID}, this.GetGoogleAuthCodeOperationCompleted, userState);
        }
        
        private void OnGetGoogleAuthCodeOperationCompleted(object arg) {
            if ((this.GetGoogleAuthCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGoogleAuthCodeCompleted(this, new GetGoogleAuthCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveGoogleAuthCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SaveGoogleAuthCode(string AuthCode, long AccountID) {
            object[] results = this.Invoke("SaveGoogleAuthCode", new object[] {
                        AuthCode,
                        AccountID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SaveGoogleAuthCodeAsync(string AuthCode, long AccountID) {
            this.SaveGoogleAuthCodeAsync(AuthCode, AccountID, null);
        }
        
        /// <remarks/>
        public void SaveGoogleAuthCodeAsync(string AuthCode, long AccountID, object userState) {
            if ((this.SaveGoogleAuthCodeOperationCompleted == null)) {
                this.SaveGoogleAuthCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGoogleAuthCodeOperationCompleted);
            }
            this.InvokeAsync("SaveGoogleAuthCode", new object[] {
                        AuthCode,
                        AccountID}, this.SaveGoogleAuthCodeOperationCompleted, userState);
        }
        
        private void OnSaveGoogleAuthCodeOperationCompleted(object arg) {
            if ((this.SaveGoogleAuthCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGoogleAuthCodeCompleted(this, new SaveGoogleAuthCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void EmpLoginCompletedEventHandler(object sender, EmpLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmpLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmpLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ForgotPasswordCompletedEventHandler(object sender, ForgotPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void GetEmpDetailsByEmpIDCompletedEventHandler(object sender, GetEmpDetailsByEmpIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpDetailsByEmpIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpDetailsByEmpIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ProjectListCompletedEventHandler(object sender, ProjectListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProjectListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProjectListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void StartProjectCompletedEventHandler(object sender, StartProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveProfileCompletedEventHandler(object sender, SaveProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void PopulateProfileCompletedEventHandler(object sender, PopulateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PopulateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PopulateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void LocationItemsCompletedEventHandler(object sender, LocationItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ExternalCreateProjectCompletedEventHandler(object sender, ExternalCreateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalCreateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalCreateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ExternalSignUpCompletedEventHandler(object sender, ExternalSignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalSignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalSignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ExternalSignUpUserUpdateCompletedEventHandler(object sender, ExternalSignUpUserUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalSignUpUserUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalSignUpUserUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ExternalSignUpUserSubscriptionCompletedEventHandler(object sender, ExternalSignUpUserSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExternalSignUpUserSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExternalSignUpUserSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void FreeUserUploadSizeUpdateCompletedEventHandler(object sender, FreeUserUploadSizeUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FreeUserUploadSizeUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FreeUserUploadSizeUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveImageCompletedEventHandler(object sender, SaveImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveSingleImageCompletedEventHandler(object sender, SaveSingleImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSingleImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSingleImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveManualCompletedEventHandler(object sender, SaveManualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveManualforGDriveCompletedEventHandler(object sender, SaveManualforGDriveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveManualforGDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveManualforGDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SendMailForGDriveCompletedEventHandler(object sender, SendMailForGDriveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailForGDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMailForGDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SignupPlanCompletedEventHandler(object sender, SignupPlanCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignupPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignupPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void CMSCompletedEventHandler(object sender, CMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void UploadFileMultipleCompletedEventHandler(object sender, UploadFileMultipleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileMultipleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileMultipleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void MargeAudioCompletedEventHandler(object sender, MargeAudioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MargeAudioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MargeAudioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void MargeAudioForGDriveCompletedEventHandler(object sender, MargeAudioForGDriveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MargeAudioForGDriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MargeAudioForGDriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void DeleteProjectCompletedEventHandler(object sender, DeleteProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SendQRCodeMailCompletedEventHandler(object sender, SendQRCodeMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQRCodeMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQRCodeMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ValidatePaymentCompletedEventHandler(object sender, ValidatePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SendLocationQRCodeMailCompletedEventHandler(object sender, SendLocationQRCodeMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLocationQRCodeMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLocationQRCodeMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void GetGoogleAuthCodeCompletedEventHandler(object sender, GetGoogleAuthCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGoogleAuthCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGoogleAuthCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void SaveGoogleAuthCodeCompletedEventHandler(object sender, SaveGoogleAuthCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveGoogleAuthCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveGoogleAuthCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591